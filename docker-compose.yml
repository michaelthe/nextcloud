version: '3'

services:
  db:
    image: postgres:alpine
    restart: always
    hostname: db
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - default
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?POSTGRES_PASSWORD}

  app:
    image: nextcloud:${NEXTCLOUD_VERSION:?NEXTCLOUD_VERSION}
    restart: always
    hostname: ${HOSTNAME:?HOSTNAME}
    ports:
      - 8080:80
    volumes:
      - nextcloud:/var/www/html
    depends_on:
      - db
    networks:
      - default
      - proxy-tier
    environment:
      - VIRTUAL_HOST=${HOSTNAME:?HOSTNAME}
      - LETSENCRYPT_HOST=${HOSTNAME:?HOSTNAME}
      - LETSENCRYPT_EMAIL=${EMAIL:?EMAIL}

  proxy:
    image: jwilder/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - certs:/etc/nginx/certs:ro
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf:ro
    networks:
      - proxy-tier

  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    restart: always
    volumes:
      - certs:/etc/nginx/certs
      - vhost.d:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - proxy-tier
    depends_on:
      - proxy

volumes:
  db:
  html:
  certs:
  vhost.d:
  nextcloud:

networks:
  proxy-tier:
